{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Instalaci\u00f3n y configuraci\u00f3n de un servidor web Nginx","text":"<p>Primero de todo, actualizaremos e instalaremos el paquete de Nginx:</p> <pre><code>sudo apt update\nsudo apt install nginx\n</code></pre> <p></p>"},{"location":"#comprobacion-de-nginx","title":"Comprobaci\u00f3n de Nginx","text":"<p>Comprobaremos que Nginx est\u00e1 funcionando:</p> <pre><code>systemctl status nginx\n</code></pre> <p></p>"},{"location":"#creacion-de-carpetas-del-sitio-web","title":"Creaci\u00f3n de carpetas del sitio web","text":"<p>Ahora vamos a crear las carpetas que contendr\u00e1n todos los archivos del sitio web. Accedemos a la carpeta /var/www y creamos la carpeta de nuestro dominio:</p> <pre><code>sudo mkdir -p /var/www/nombre_web/html`\n</code></pre> <p>Dentro de la carpeta /html, tendremos que clonar el repositorio https://github.com/cloudacademy/static-website-example.</p> <p>Para poder hacerlo, debemos tener ya instalado Git.</p> <p></p> <p>Ahora haremos que el propietario de esta carpeta y todo lo que haya dentro sea el usuario www-data, que normalmente es el usuario del servicio web:</p> <pre><code>sudo chown -R www-data:www-data /var/www/nombre_web/html\n</code></pre> <p>Le daremos permisos para que no nos d\u00e9 un error de acceso no autorizado al entrar en el sitio web:</p> <pre><code>sudo chmod -R 755 /var/www/nombre_web\n</code></pre> <p></p>"},{"location":"#comprobacion-del-servidor","title":"Comprobaci\u00f3n del servidor","text":"<p>Para comprobar que el servidor est\u00e1 funcionando y sirviendo p\u00e1ginas correctamente, accedemos desde nuestro cliente a:</p> <pre><code>http://IP_m\u00e1quina_virtual\n</code></pre> <p>Deber\u00e1 aparecer algo as\u00ed: </p>"},{"location":"#configuracion-del-bloque-de-servidor","title":"Configuraci\u00f3n del bloque de servidor","text":"<p>Para que Nginx presente el contenido de nuestra web, es necesario crear un bloque de servidor con las directivas correctas. En vez de modificar el archivo de configuraci\u00f3n predeterminado directamente, crearemos uno nuevo en /etc/nginx/sites-available/nombre_web:</p> <p>Con el comando:</p> <pre><code>sudo nano /etc/nginx/sites-available/vuestro_dominio\n</code></pre> <p>En el editor de configuraci\u00f3n pondremos lo siguiente:</p> <p></p> <p>(Donde la ruta root ser\u00e1 la carpeta donde clonamos el repositorio anterior en la que se encuentra nuestro archivo index.html).</p> <p>Y crearemos un archivo simb\u00f3lico entre este archivo y el de sitios que est\u00e1n habilitados, para que se d\u00e9 de alta autom\u00e1ticamente:</p> <pre><code>sudo ln -s /etc/nginx/sites-available/nombre_web /etc/nginx/sites-enabled/\n</code></pre> <p>Reiniciamos el servidor para aplicar la configuraci\u00f3n:</p> <pre><code>sudo systemctl restart nginx\n</code></pre>"},{"location":"#comprobacion-del-correcto-funcionamiento","title":"Comprobaci\u00f3n del correcto funcionamiento","text":"<p>Como a\u00fan no poseemos un servidor DNS que traduzca los nombres a IPs, debemos hacerlo de forma manual. Vamos a editar el archivo /etc/hosts de nuestra m\u00e1quina anfitriona para que asocie la IP de la m\u00e1quina virtual a nuestro server_name.</p> <p>En Windows acceder a:</p> <pre><code>C:\\Windows\\System32\\drivers\\etc\\hosts\n</code></pre> <p>Y deberemos a\u00f1adirle la l\u00ednea:</p> <pre><code>192.168.X.X nombre_web\n</code></pre> <p>Donde deb\u00e9is sustituir la IP por la que tenga vuestra m\u00e1quina virtual.</p> <p></p> <p>Podemos comprobar que funcione haciendo ping.</p> <p></p> <p>Desde el archivo /var/log/nginx/access.log de nuestra m\u00e1quina virtual podemos consultar las peticiones a nuestra web.</p> <p></p> <p>Desde el archivo /var/log/nginx/error.log de nuestra m\u00e1quina virtual podemos consultar cualquier error que se haya registrado.</p> <p></p>"},{"location":"#transferir-archivos-desde-la-maquina-local-a-la-maquina-virtual-mediante-ftp","title":"Transferir archivos desde la m\u00e1quina local a la m\u00e1quina virtual mediante FTP","text":"<p>En primer lugar, lo instalaremos desde los repositorios:</p> <pre><code>sudo apt-get update\nsudo apt-get install vsftpd\n</code></pre> <p>Ahora vamos a crear una carpeta en nuestro home en Debian:</p> <pre><code>mkdir /home/nombre_usuario/ftp\n</code></pre> <p>Y ahora crearemos los certificados de seguridad necesarios para aportar la capa de cifrado a nuestra conexi\u00f3n (algo parecido a HTTPS):</p> <pre><code>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem\n</code></pre> <p></p> <p>Y una vez realizados estos pasos, procedemos a realizar la configuraci\u00f3n de vsftpd propiamente dicha:</p> <pre><code>sudo nano /etc/vsftpd.conf\n</code></pre> <p>Ahora debemos eliminar las siguientes l\u00edneas:</p> <p></p> <p>Y seguidamente a\u00f1adiremos las siguientes l\u00edneas:</p> <pre><code>rsa_cert_file=/etc/ssl/private/vsftpd.pem\nrsa_private_key_file=/etc/ssl/private/vsftpd.pem\nssl_enable=YES\nallow_anon_ssl=NO\nforce_local_data_ssl=YES\nforce_local_logins_ssl=YES\nssl_tlsv1=YES\nssl_sslv2=NO\nssl_sslv3=NO\nrequire_ssl_reuse=NO\nssl_ciphers=HIGH\nlocal_root=/home/nombre_usuario/ftp\n</code></pre> <p></p> <p>Tras guardar los cambios, reiniciamos el servicio para que coja la nueva configuraci\u00f3n:</p> <pre><code>sudo systemctl restart --now vsftpd\n</code></pre> <p>Ya podemos acceder a nuestro servidor mediante un cliente FTP como por ejemplo Filezilla. Vamos a conectarnos mediante SFTP. Debemos introducir los datos de nuestra m\u00e1quina y el puerto 22.</p> <p></p> <p>Al pulsar conexi\u00f3n r\u00e1pida, nos aparecer\u00e1 un aviso que debemos aceptar.</p> <p>A continuaci\u00f3n, buscaremos el archivo que queremos subir a nuestro servidor en la pesta\u00f1a de la izquierda; en este caso, enviar\u00e9 un archivo .zip llamado \u201cPruebaDAW\u201d.</p> <p>Para subirlo pulsamos clic derecho y \u201cSubir\u201d.</p> <p></p>"},{"location":"#anadir-certificados-ssl-y-acceder-mediante-https","title":"A\u00f1adir certificados SSL y acceder mediante HTTPS","text":"<p>Lo primero ser\u00e1 generar los certificados:</p> <pre><code>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt\n</code></pre> <p></p> <p>Crear un grupo Diffie-Hellman:</p> <pre><code>sudo openssl dhparam -out /etc/nginx/dhparam.pem 2048\n</code></pre> <p></p> <p>Crear una configuraci\u00f3n para SSL:</p> <pre><code>sudo nano /etc/nginx/snippets/self-signed.conf\n</code></pre> <p>Y poner lo siguiente:</p> <pre><code>ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;\nssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;\n</code></pre> <p></p> <p>Crear una configuraci\u00f3n para par\u00e1metros SSL:</p> <pre><code>sudo nano /etc/nginx/snippets/ssl-params.conf\n</code></pre> <p>Y a\u00f1adir lo siguiente:</p> <pre><code>Copiar c\u00f3digo\nssl_protocols TLSv1.2 TLSv1.3;\nssl_prefer_server_ciphers on;\nssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';\nssl_dhparam /etc/nginx/dhparam.pem;\nssl_session_timeout 1d;\nssl_session_cache shared:SSL:50m;\nssl_session_tickets off;\nssl_stapling on;\nssl_stapling_verify on;\nresolver 8.8.8.8 8.8.4.4 valid=300s;\nresolver_timeout 5s;\nadd_header X-Content-Type-Options nosniff;\nadd_header X-Frame-Options DENY;\nadd_header X-XSS-Protection \"1; mode=block\";\n</code></pre> <p></p> <p>Editar el archivo de configuraci\u00f3n del sitio</p> <pre><code>sudo nano /etc/nginx/sites-available/nombre_web\n</code></pre> <p></p> <p>Habilitar la nueva configuraci\u00f3n y reiniciar Nginx. Crear el enlace simb\u00f3lico (si a\u00fan no est\u00e1 hecho):</p> <pre><code>sudo ln -s /etc/nginx/sites-available/nombre_web /etc/nginx/sites-enabled/\n</code></pre> <p>Reiniciar Nginx:</p> <pre><code>sudo systemctl restart nginx\n</code></pre> <p>Ahora ya podremos acceder a nuestra web buscando:</p> <pre><code>https://nombre_web\n</code></pre> <p>o</p> <pre><code>http://nombre_web\n</code></pre> <p></p>"}]}